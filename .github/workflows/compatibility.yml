name: Compatibility with FiloSottile/age

on:
  push:
    branches:
      - master
    paths:
      - 'src/**'
      - '.github/workflows/**'
      - 'Pipfile*'
  schedule:
    - cron: '0 0 * * *'

jobs:
  build:

    runs-on: ubuntu-latest

    env:
      SODIUM_INSTALL: system

    steps:
    - uses: actions/checkout@v1

    - name: Set up Go 1.13
      uses: actions/setup-go@v1
      with:
        go-version: 1.13
      id: go

    - name: Install age
      run: |
        cd $HOME
        git clone https://filippo.io/age
        cd age
        go build -o . filippo.io/age/cmd/...

    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8

    - name: Install pyage
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade pipenv
        sudo apt-get update
        sudo apt-get install -y libsodium-dev
        pipenv install --deploy --dev

    - name: "Sanity check: age -> age"
      run: |
        export KEYFILE=$GITHUB_WORKSPACE/testdata/key.txt
        export PUBKEY=pubkey:Gs5tngphdkkOIWhw7KyK3A-QBnzNwPqsjesi5SIilCw
        echo "Hello Golang sanity." | $HOME/age/age $PUBKEY | $HOME/age/age -d $KEYFILE

    - name: "Sanity check: pyage -> pyage"
      run: |
        export GOPATH=$HOME/go
        export GOBIN=$GOPATH/bin
        export KEYFILE=$GITHUB_WORKSPACE/testdata/key.txt
        export PUBKEY=pubkey:Gs5tngphdkkOIWhw7KyK3A-QBnzNwPqsjesi5SIilCw
        echo "Hello Python sanity." | pipenv run age encrypt $PUBKEY | pipenv run age decrypt $KEYFILE

    - name: age -> pyage
      run: |
        export GOPATH=$HOME/go
        export GOBIN=$GOPATH/bin
        export KEYFILE=$GITHUB_WORKSPACE/testdata/key.txt
        export PUBKEY=pubkey:Gs5tngphdkkOIWhw7KyK3A-QBnzNwPqsjesi5SIilCw
        echo "Hello pyage." | $HOME/age/age $PUBKEY | pipenv run age decrypt $KEYFILE

    - name: pyage -> age
      run: |
        export GOPATH=$HOME/go
        export GOBIN=$GOPATH/bin
        export KEYFILE=$GITHUB_WORKSPACE/testdata/key.txt
        export PUBKEY=pubkey:Gs5tngphdkkOIWhw7KyK3A-QBnzNwPqsjesi5SIilCw
        echo "Hello (go)age." | pipenv run age encrypt $PUBKEY | $HOME/age/age -d $KEYFILE

    - name: Install SSH-RSA keys
      run: |
        mkdir -p $HOME/.ssh
        cp $GITHUB_WORKSPACE/testdata/test_rsa.pub $HOME/.ssh/id_rsa.pub
        cp $GITHUB_WORKSPACE/testdata/test_rsa $HOME/.ssh/id_rsa

    - name: "SSH-RSA: age -> pyage"
      run: |
        export GOPATH=$HOME/go
        export GOBIN=$GOPATH/bin
        echo "Hello pyage SSH." | $HOME/age/age "$(<$HOME/.ssh/id_rsa.pub)" | pipenv run age decrypt

    - name: "SSH-RSA: pyage -> age"
      run: |
        export GOPATH=$HOME/go
        export GOBIN=$GOPATH/bin
        echo "Hello (go)age SSH." | pipenv run age encrypt $HOME/.ssh/id_rsa.pub | $HOME/age/age -d $HOME/.ssh/id_rsa
